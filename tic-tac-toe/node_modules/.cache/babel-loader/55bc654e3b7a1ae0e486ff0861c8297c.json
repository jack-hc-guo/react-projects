{"ast":null,"code":"var _jsxFileName = \"/Users/jguo/workspace/jsreact/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  const active = {\n    fontWeight: 'bold'\n  };\n  const inactive = {\n    fontWeight: 'normal'\n  };\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    style: props.winningSquare ? active : inactive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    let winningSquare = this.props.winner && this.props.winner.includes(i) ? true : false;\n    return /*#__PURE__*/React.createElement(Square, {\n      value: this.props.squares[i],\n      winningSquare: winningSquare,\n      onClick: () => this.props.onClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    });\n  }\n\n  render() {\n    let board = [];\n    const maxRow = this.props.maxRow;\n    const maxCol = this.props.maxCol;\n\n    for (let r = 0; r < maxRow; r++) {\n      let row = [];\n\n      for (let c = 0; c < maxCol; c++) {\n        row.push( /*#__PURE__*/React.createElement(\"span\", {\n          key: r * maxRow + c,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 20\n          }\n        }, this.renderSquare(r * maxRow + c)));\n      }\n\n      board.push( /*#__PURE__*/React.createElement(\"div\", {\n        className: \"board-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 18\n        }\n      }, row));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, board);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        moves: Array(2).fill(null)\n      }],\n      xIsNext: true,\n      stepNumber: 0,\n      ascending: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    const row = Math.floor(i / 3) + 1;\n    const col = Math.floor(i % 3) + 1;\n    const move = [row, col];\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        moves: move\n      }]),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  sortHandleClick() {\n    this.setState({\n      ascending: !this.state.ascending\n    });\n  }\n\n  render() {\n    const active = {\n      fontWeight: 'bold'\n    };\n    const inactive = {\n      fontWeight: 'normal'\n    };\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const ascending = this.state.ascending;\n    const moves = history.map((step, move) => {\n      const desc = move ? `Go to move # ${move} -- (${step.moves[0]}, ${step.moves[1]})` : `Go to game start`;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: move,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        style: this.state.stepNumber === move ? active : inactive,\n        onClick: () => this.jumpTo(move),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      }, desc));\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner.winner;\n    } else {\n      if (this.state.stepNumber === 9) {\n        status = 'No winner. The game is a tie';\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      winner: winner && winner.winningSquares,\n      maxRow: 3,\n      maxCol: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, status), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, ascending ? moves : moves.reverse())), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sort-reverse\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.sortHandleClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }, \"Sort by Desc\")));\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        winningSquares: lines[i]\n      };\n    }\n  }\n\n  return null;\n}\n\nclass FrontPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      boardSize: 3\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Game, {\n      maxRow: this.state.boardSize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }\n    }));\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(FrontPage, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/jguo/workspace/jsreact/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","active","fontWeight","inactive","onClick","winningSquare","value","Board","Component","renderSquare","i","winner","includes","squares","render","board","maxRow","maxCol","r","row","c","push","Game","constructor","state","history","Array","fill","moves","xIsNext","stepNumber","ascending","handleClick","slice","current","length","calculateWinner","Math","floor","col","move","setState","concat","jumpTo","step","sortHandleClick","map","desc","status","winningSquares","reverse","lines","a","b","FrontPage","boardSize","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n    const active = {\n      fontWeight: 'bold'\n    };\n\n    const inactive = {\n      fontWeight: 'normal'\n    };\n    return (\n      <button\n        className=\"square\" \n        onClick={props.onClick}\n        style={props.winningSquare ? active : inactive}>\n        {props.value}\n      </button>\n    );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    let winningSquare = this.props.winner && this.props.winner.includes(i) ? true : false; \n    return( \n      <Square \n            value={ this.props.squares[i] }\n            winningSquare={winningSquare}\n            onClick = {() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    let board = [];\n    const maxRow = this.props.maxRow;\n    const maxCol = this.props.maxCol; \n\n    for(let r = 0; r < maxRow; r++ ){\n      let row = [];\n      for(let c = 0; c < maxCol; c++){\n          row.push(<span key={(r * maxRow) + c}>{this.renderSquare((r * maxRow) + c)}</span>);\n      }\n      board.push(<div className=\"board-row\">{row}</div>);\n    }\n\n    return (\n      <div>\n      {board}\n      </div>\n      );\n    }\n  }\n\n\nclass Game extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        moves: Array(2).fill(null),\n      }],\n      xIsNext: true,\n      stepNumber: 0,\n      ascending: true,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    const row = Math.floor(i/3)+1;\n    const col = Math.floor(i%3)+1;\n    const move = [row, col];\n\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        moves: move,\n      }]),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n\n  }\n\n  sortHandleClick(){\n    this.setState({\n      ascending: !this.state.ascending,\n    });\n\n  }\n\n  render() {\n    const active = {\n      fontWeight: 'bold'\n    };\n\n    const inactive = {\n      fontWeight: 'normal'\n    };\n\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const ascending = this.state.ascending;\n    \n    const moves = history.map((step, move) => {\n      const desc = move ? `Go to move # ${move} -- (${step.moves[0]}, ${step.moves[1]})`: `Go to game start`;\n      return (\n        <li key={move}> \n          <button style={this.state.stepNumber === move ? active : inactive} onClick = {() => this.jumpTo(move)}>{desc}</button>\n        </li>\n        );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner.winner;\n    } else {\n      if (this.state.stepNumber === 9){\n        status = 'No winner. The game is a tie';\n      }\n      else{\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n      \n    }\n\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={i => this.handleClick(i)}\n            winner={winner && winner.winningSquares}\n            maxRow={3}\n            maxCol={3}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{ascending ? moves : moves.reverse()}</ol>\n        </div>\n        <div className=\"sort-reverse\">\n          <button onClick={() => this.sortHandleClick()}>Sort by Desc</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares){\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++){\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n      return {winner: squares[a],\n          winningSquares: lines[i]\n        };\n    }\n  }\n  return null;\n}\n\nclass FrontPage extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      boardSize: 3\n    };\n  }\n\n  render(){\n    return(\n      <div>\n        <Game \n          maxRow={this.state.boardSize}\n        />\n      </div>\n      )\n  }\n}\n// ========================================\n\nReactDOM.render(\n  <FrontPage />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}
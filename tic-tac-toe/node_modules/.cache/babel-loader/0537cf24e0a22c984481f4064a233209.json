{"ast":null,"code":"var _jsxFileName = \"/Users/jguo/workspace/jsreact/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    });\n  }\n\n  render() {\n    let board = [];\n\n    for (let r = 0; r < 3; r++) {\n      let row = [];\n\n      for (let c = 0; c < 3; c++) {\n        row.push( /*#__PURE__*/React.createElement(\"span\", {\n          key: r * 3 + c,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 20\n          }\n        }, this.renderSquare(r * 3 + c)));\n      }\n\n      board.push( /*#__PURE__*/React.createElement(\"div\", {\n        className: \"board-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 18\n        }\n      }, row));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, board);\n  }\n\n}\n\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortByDesc: false\n    };\n  }\n\n  toggleButton() {\n    this.setState({\n      sortByDesc: !this.sortByDesc\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.toggleButton(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \"Toggle\"));\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        moves: Array(2).fill(null)\n      }],\n      xIsNext: true,\n      stepNumber: 0\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    const row = Math.floor(i / 3) + 1;\n    const col = Math.floor(i % 3) + 1;\n    const move = [row, col];\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        moves: move\n      }]),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const active = {\n      fontWeight: 'bold'\n    };\n    const inactive = {\n      fontWeight: 'normal'\n    };\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? `Go to move # ${move} -- (${step.moves[0]}, ${step.moves[1]})` : `Go to game start`;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: move,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        style: this.state.stepNumber === move ? active : inactive,\n        onClick: () => this.jumpTo(move),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, desc));\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    const sort = /*#__PURE__*/React.createElement(Toggle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 18\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, status), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, moves)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sort-moves\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, \"sort\")));\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Game, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/jguo/workspace/jsreact/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","board","r","row","c","push","Toggle","constructor","state","sortByDesc","toggleButton","setState","Game","history","Array","fill","moves","xIsNext","stepNumber","handleClick","slice","current","length","calculateWinner","Math","floor","col","move","concat","jumpTo","step","active","fontWeight","inactive","winner","map","desc","status","sort","lines","a","b","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n    return (\n      <button className=\"square\" onClick={props.onClick}>\n        {props.value}\n      </button>\n    );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return( \n      <Square \n            value={ this.props.squares[i] } \n            onClick = {() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    let board = [];\n\n    for(let r = 0; r < 3; r++ ){\n      let row = [];\n      for(let c = 0; c < 3; c++){\n          row.push(<span key={(r * 3) + c}>{this.renderSquare((r * 3) + c)}</span>);\n      }\n      board.push(<div className=\"board-row\">{row}</div>);\n    }\n\n    return (\n      <div>\n      {board}\n      </div>\n      );\n    }\n  }\n\nclass Toggle extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      sortByDesc: false,\n    }\n  }\n\n  toggleButton(){\n    this.setState({\n      sortByDesc: !this.sortByDesc,\n    });\n  }\n\n  render(){\n    return(\n      <div>\n        <button onClick={() => this.toggleButton()}>\n        Toggle\n        </button>\n      </div>\n      )\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        moves: Array(2).fill(null),\n      }],\n      xIsNext: true,\n      stepNumber: 0,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    const row = Math.floor(i/3)+1;\n    const col = Math.floor(i%3)+1;\n    const move = [row, col];\n\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        moves: move,\n      }]),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n\n  }\n\n  render() {\n    const active = {\n      fontWeight: 'bold'\n    };\n\n    const inactive = {\n      fontWeight: 'normal'\n    };\n\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    \n    const moves = history.map((step, move) => {\n      const desc = move ? `Go to move # ${move} -- (${step.moves[0]}, ${step.moves[1]})`: `Go to game start`;\n      return (\n        <li key={move}> \n          <button style={this.state.stepNumber === move ? active : inactive} onClick = {() => this.jumpTo(move)}>{desc}</button>\n        </li>\n        );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    const sort = <Toggle></Toggle> \n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={i => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n        <div className=\"sort-moves\">\n          <div>sort</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares){\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++){\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n      return squares[a];\n    }\n  }\n  return null;\n}\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}